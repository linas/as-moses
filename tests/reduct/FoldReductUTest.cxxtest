#include <opencog/asmoses/utils/tree.h>
#include <opencog/util/mt19937ar.h>

#include <opencog/asmoses/combo/combo/vertex.h>
#include <opencog/asmoses/combo/interpreter/eval.h>
#include <opencog/asmoses/reduct/reduct/reduct.h>
#include <opencog/asmoses/combo/combo/combo.h>

using namespace std;
using namespace opencog::combo;
using namespace opencog::reduct;

string perform_fold_reduce(const string& tree_str)
{
    combo_tree tr;
    stringstream ss(tree_str);
    ss >> tr;
    stringstream ss_reduce;
    fold_reduce(tr);
    ss_reduce << tr;
    return ss_reduce.str();
}

class FoldReductUTest :  public CxxTest::TestSuite {
public:
    // test_fold_unrolling:
    // foldl(f v list(a b c)) -> f(f(f(v a) b) c)
    // foldr(f v list(a b c)) -> f(a f(b f(c v)))
    void test_fold_unrolling()
    {
    string tree_str1 = "foldr(+ 1 list(2 3 4))";
    TS_ASSERT_EQUALS(perform_fold_reduce(tree_str1), string("+(2 +(3 +(4 1)))"));
    string tree_str2 = "foldl(+ 1 list(2 3 4))";
    TS_ASSERT_EQUALS(perform_fold_reduce(tree_str2), string("+(+(+(1 2) 3) 4)"));
    }

};
